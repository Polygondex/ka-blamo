export declare type MoralisCloudResult = any;
export interface UseMoralisCloudFunctionOptions {
    autoFetch?: boolean;
}
export declare type MoralisCloudFunctionParameters = Record<string, any>;
export interface MoralisCloudFetchOptions {
    onError?: (error: Error) => void;
    onSuccess?: (results: MoralisCloudResult) => void;
    onComplete?: () => void;
    throwOnError?: boolean;
    params?: MoralisCloudFunctionParameters;
}
export declare const useMoralisCloudFunction: (name: string, params?: MoralisCloudFunctionParameters | undefined, options?: UseMoralisCloudFunctionOptions | undefined) => {
    fetch: ({ throwOnError, onComplete, onError, onSuccess, params: fetchParams, }?: MoralisCloudFetchOptions) => Promise<void>;
    isFetching: boolean;
    isLoading: boolean;
    error: Error | null;
    data: any;
};
