{"version":3,"sources":["images/pDexIcon2.png","images/apeModeIcon.svg","images/monkey.svg","layout/NavBar.js","components/Table.js","App.js","reportWebVitals.js","index.js","enums/TableHeaderEnum.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","titleWrapper","display","alignItems","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","justifyContent","autocompleteSearch","margin","sectionDesktop","sectionMobile","navBar","dex","color","pdexIcon","maxHeight","tokenIcon","border","autocompleteOption","minWidth","flexDirection","autocompleteOptionWrapper","overflow","whiteSpace","textOverflow","apeModeIcon","marginTop","apeModeOffIcon","opacity","apeModeFormGroup","CssTextField","withStyles","root","borderBottomColor","borderColor","TextField","PurpleSwitch","switchBase","checked","track","Switch","NavBar","tokenList","apeMode","setApeMode","defaultProps","options","getOptionLabel","option","mdtTokenName","mdtTokenSymbol","renderOption","Fragment","className","classes","src","mdtTokenAddr","alt","onError","e","target","onerror","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","apeModeActivated","setApeModeActivated","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","Badge","badgeContent","event","currentTarget","AppBar","Toolbar","edge","menuButton","Typography","variant","noWrap","FormGroup","row","FormControlLabel","control","onChange","name","icon","checkedIcon","label","Autocomplete","size","freeSolo","PaperComponent","children","Paper","style","background","closeIcon","fontSize","renderInput","params","InputProps","startAdornment","InputAdornment","InputLabelProps","tableContainer","boxShadow","tableContainerApeMode","genTable","tableLayout","tableHeader","lineHeight","top","borderBottom","tdPriceChg","textAlign","dashPriceChg","marginBottom","gainNum","fontWeight","paddingBottom","negNum","gainNumTVL","negNumTVL","dashPrice","tdTokenData","tokenSymbol","dashVol","volLabel","tdTVL24","totValLocked","tvlChange","tdTVLTitle","tvl","writingMode","textOrientation","listedTimeLabel","listedTime","listedTimeHrs","kFormatter","num","Math","abs","sign","toFixed","roundNumber","value","precision","multiplier","pow","round","Table","filteredTableData","tableHeaderData","tableData","renderTableTitleIcon","TableHeaderEnum","formatListingTime","date","difference","Date","getTime","parseInt","substring","length","daysDifference","floor","hoursDifference","map","rToken","index","mostLiquidExchangeID","priceChange","Price_PctChg_24hr","current_mstbePrice","VolumeUSD_24hr","dashListed","DateListed","current_TVL_USD","TVL_USD_24hr","axios","require","table","generalGridStyle","welcomeMsg","App","setChainData","useMoralis","authenticate","isAuthenticated","user","Moralis","logout","isInitialized","gainers24HRSortedData","setGainers24HRSortedData","gainers10MINSortedData","setGainers10MINSortedData","losers24HRSortedData","setLosers24HRSortedData","tvlGainers24HRSortedData","setTVLGainers24HRSortedData","tvlLosers24HRSortedData","setTVLLosers24HRSortedData","mostActiveSortedData","setMostActiveSortedData","mostActiveApeModeSortedData","setMostActiveApeModeSortedData","newestListingApeModeSortedData","setNewestListingApeModeSortedData","gainers24HRApeModeSortedData","setGainers24HRApeModeSortedData","useEffect","getPDEXData","catch","errResp","console","error","reverse","getApeModeData","getRecords","a","query","Query","equalTo","get","find","results","temp","forEach","point","tempObj","attributes","transaction_index","push","log","sortGainers","b","propToSortBy","sortByListingDate","trimmedA","trimmedB","pDexResp","data","filterLowTvl","filter","token","sort","apeModeData","renderGenericTable","headerEnum","apeModeCharts","regularCharts","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","appId","serverUrl","document","getElementById","Object","freeze","GAINER_24HR","GAINER_10MIN","LOSER_24HR","ACTIVE_24HR","TVL_UP_24HR","TVL_DOWN_24HR","NEWEST_LISTING","module","exports"],"mappings":"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","file":"static/js/main.cc00f8b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pDexIcon2.ad55a4d2.png\";","export default __webpack_public_path__ + \"static/media/apeModeIcon.c483b342.svg\";","export default __webpack_public_path__ + \"static/media/monkey.ff4b692e.svg\";","import React from 'react';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport pdexIcon from '../images/pDexIcon2.png';\nimport apeModeIcon from '../images/apeModeIcon.svg';\nimport monkeyIcon from '../images/monkey.svg';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  titleWrapper: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  autocompleteSearch: {\n    width: '32ch',\n    margin: '0 16px',\n\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  navBar: {\n    backgroundColor: '#1D1D1D'\n  },\n  dex: {\n    color: '#A874FF'\n  },\n  pdexIcon: {\n    maxHeight: '40px',\n    marginRight: '8px'\n  },\n  tokenIcon: {\n    height: '16px',\n    width: '16px',\n    marginRight: '8px',\n    border: 'none'\n  },\n  autocompleteOption: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: '0',\n    flexDirection: 'row'\n  },\n  autocompleteOptionWrapper: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    minWidth: '0',\n  },\n  apeModeIcon: {\n    maxHeight: '26px',\n    marginTop: '-3px'\n  },\n  apeModeOffIcon: {\n    maxHeight: '26px',\n    opacity: '0.4',\n    marginTop: '-3px'\n  },\n  apeModeFormGroup: {\n\n  }\n}));\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'darkGreen',\n      },\n      '&:hover fieldset': {\n        borderColor: 'green',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n    color: 'white',\n  },\n})(TextField);\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: '#A874FF',\n    '&$checked': {\n      color: '#A874FF',\n    },\n    '&$checked + $track': {\n      backgroundColor: '#A874FF',\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst NavBar = ({tokenList, apeMode, setApeMode}) => {\n  const defaultProps = {\n    options: tokenList,\n    getOptionLabel: (option) => `${option.mdtTokenName} - ${option.mdtTokenSymbol}`,\n    renderOption: (option) => (\n        <React.Fragment>\n          <div className={classes.autocompleteOption}>\n\n            <img\n                src={`https://polygondex.com/track/i/coinicons/by_0x/polygon/${option.mdtTokenAddr}.png`}\n                alt=\"\" className={classes.tokenIcon}\n                onError={(e)=>{\n                  e.target.onerror = null; e.target.src=\"https://polygondex.com/track/i/coinicons/missingicon.png\"\n                }}\n            />\n            <span className={classes.autocompleteOptionWrapper}>\n            {option.mdtTokenSymbol} - {option.mdtTokenName}\n          </span>\n          </div>\n\n        </React.Fragment>\n    )\n  };\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [apeModeActivated, setApeModeActivated] = React.useState(apeMode || false);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleApeModeChange = (event) => {\n    setApeMode(event.target.checked);\n    setApeModeActivated(event.target.checked);\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n      <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          id={menuId}\n          keepMounted\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          open={isMenuOpen}\n          onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n      <Menu\n          anchorEl={mobileMoreAnchorEl}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          id={mobileMenuId}\n          keepMounted\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          open={isMobileMenuOpen}\n          onClose={handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"primary-search-account-menu\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n  );\n\n  return (\n      <div className={classes.grow}>\n        <AppBar position=\"static\" className={classes.navBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\">\n              <MenuIcon />\n            </IconButton>\n            <div className={classes.titleWrapper}>\n              <img className={classes.pdexIcon} src={pdexIcon} alt='PDexLogo'/>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Polygon\n                <span className={classes.dex}>DEX</span>\n              </Typography>\n            </div>\n            <div className={classes.grow} />\n            <FormGroup aria-label=\"position\" row className={classes.apeModeFormGroup}>\n              <FormControlLabel\n                  control={<PurpleSwitch checked={apeModeActivated} onChange={handleApeModeChange} name=\"apeMode\"\n                            icon={<img className={classes.apeModeOffIcon} src={apeModeIcon} alt='ApeMode Icon'/>}\n                            checkedIcon={<img className={classes.apeModeIcon} src={apeModeIcon} alt='ApeMode Icon'/>}\n                  />}\n                  label=\"Custom color\"\n                  label=\"Ape Mode\"\n                  labelPlacement=\"top\"\n              />\n            </FormGroup>\n\n            <Autocomplete\n                {...defaultProps}\n                id=\"auto-complete\"\n                size={'small'}\n                freeSolo\n                PaperComponent={({children}) => (\n                    <Paper style={{ background: \"lightgrey\" }}>{children}</Paper>\n                )}\n                closeIcon={<CloseIcon fontSize=\"small\" style={{ color: 'red', marginLeft: 'auto' }} />}\n                renderInput={(params) => (\n                    <CssTextField\n                        className={classes.autocompleteSearch}\n                        {...params}\n                        label=\"Crypto Quote\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputProps={{ ...params.InputProps, style: {color:'white'}, startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                          )\n                        }}\n                        InputLabelProps={{\n                          style: {\n                            color: 'white'\n                          }\n                        }}\n                    />\n                )}\n            />\n            {/*<div className={classes.sectionDesktop}>*/}\n            {/*  <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">*/}\n            {/*    <Badge badgeContent={4} color=\"secondary\">*/}\n            {/*      <MailIcon />*/}\n            {/*    </Badge>*/}\n            {/*  </IconButton>*/}\n            {/*  <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">*/}\n            {/*    <Badge badgeContent={17} color=\"secondary\">*/}\n            {/*      <NotificationsIcon />*/}\n            {/*    </Badge>*/}\n            {/*  </IconButton>*/}\n            {/*  <IconButton*/}\n            {/*      edge=\"end\"*/}\n            {/*      aria-label=\"account of current user\"*/}\n            {/*      aria-controls={menuId}*/}\n            {/*      aria-haspopup=\"true\"*/}\n            {/*      onClick={handleProfileMenuOpen}*/}\n            {/*      color=\"inherit\"*/}\n            {/*  >*/}\n            {/*    <AccountCircle />*/}\n            {/*  </IconButton>*/}\n            {/*</div>*/}\n            {/*<div className={classes.sectionMobile}>*/}\n            {/*  <IconButton*/}\n            {/*      aria-label=\"show more\"*/}\n            {/*      aria-controls={mobileMenuId}*/}\n            {/*      aria-haspopup=\"true\"*/}\n            {/*      onClick={handleMobileMenuOpen}*/}\n            {/*      color=\"inherit\"*/}\n            {/*  >*/}\n            {/*    <MoreIcon />*/}\n            {/*  </IconButton>*/}\n            {/*</div>*/}\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n  );\n}\n\nexport default NavBar\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport * as TableHeaderEnum from \"../enums/TableHeaderEnum\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    margin: '12px',\n    padding: '0 5px 5px',\n    boxShadow: '3px 3px 3px #000',\n    width: '30%',\n    display: 'inline-block',\n    height: '600px',\n    position: 'relative',\n    overflow: 'scroll',\n  },\n  tableContainerApeMode: {\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    margin: '12px',\n    padding: '0 5px 5px',\n    boxShadow: '3px 3px 3px #000',\n    width: '30%',\n    display: 'inline-block',\n    height: '800px',\n    position: 'relative',\n    overflow: 'scroll',\n  },\n  genTable: {\n    width: '100%',\n    tableLayout: 'fixed',\n    backgroundColor: '#1d1f22'\n  },\n  tableHeader: {\n    padding: '7px',\n    margin: '1px',\n    background: '#000',\n    borderRadius: '7px 7px 0 0',\n    fontSize: '20px',\n    lineHeight: '27px',\n    minWidth: '270px',\n    position: 'sticky',\n    top: '0',\n    borderBottom: '1px dotted #656565',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tdPriceChg: {\n    width: '20%',\n    borderBottom: '1px dotted #656565',\n    padding: '5px 8px 5px 5px',\n    textAlign: 'end'\n  },\n  dashPriceChg: {\n    color: 'white',\n    marginBottom: '4px'\n  },\n  gainNum: {\n    color: '#02C079',\n    fontSize: '19px',\n    fontWeight: '600',\n    paddingBottom: '8px'\n  },\n  negNum: {\n    color: 'red',\n    fontSize: '19px',\n    fontWeight: '600',\n    paddingBottom: '8px'\n  },\n  gainNumTVL: {\n    color: '#02C079',\n    fontSize: '13px',\n    fontWeight: '600'\n  },\n  negNumTVL: {\n    color: 'red',\n    fontSize: '13px',\n    fontWeight: '600'\n  },\n  dashPrice: {\n    whiteSpace: 'nowrap',\n    color: 'white',\n    fontSize: '12px',\n    fontWeight: '400'\n  },\n  tdTokenData: {\n    borderBottom: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '50%'\n  },\n  tokenSymbol: {\n    color: '#97dfff',\n    display: 'flex',\n    alignItems: 'center',\n    fontWeight: '600',\n    fontSize: '19px',\n    paddingBottom: '8px'\n  },\n  tokenIcon: {\n    height: '17px',\n    width: '17px',\n    margin: '3px 6px 3px 3px'\n  },\n  dashVol: {\n    color: 'white',\n    fontSize: '13px'\n  },\n  volLabel: {\n    color: '#999797'\n  },\n  tdTVL24: {\n    borderBottom: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '18%',\n    textAlign: 'end'\n  },\n  totValLocked: {\n    color: 'white',\n    fontSize: '13px',\n    paddingBottom: '8px'\n  },\n  tvlChange: {\n    color: 'white',\n    fontSize: '13px'\n  },\n  tdTVLTitle: {\n    borderBottom: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    width: '5%',\n  },\n  tvl: {\n    writingMode: 'vertical-rl',\n    textOrientation: 'upright',\n    color: '#727d73',\n    fontSize: '12px',\n    lineHeight: '12px',\n    fontWeight: '600',\n    textAlign: 'right',\n  },\n  listedTimeLabel:{\n    color: '#999797',\n    fontSize: '13px'\n  },\n  listedTime: {\n    fontSize: '13px'\n  },\n  listedTimeHrs: {\n    color: 'yellow',\n    fontSize: '13px'\n  }\n});\n\nconst kFormatter = (num) => {\n  return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'k' : num.toFixed(2);\n}\n\nconst roundNumber = (value, precision) => {\n    let multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n\nconst Table = ({filteredTableData, tableHeaderData, apeMode}) => {\n  const classes = useStyles();\n  const [tableData] = React.useState(filteredTableData);\n\n  const renderTableTitleIcon = () => {\n    if (tableHeaderData === TableHeaderEnum.GAINER_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-arrow-circle-up\" style={{color:'green', marginRight:'8px', fontSize: '22px'}}/>\n          Top Gainers (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.GAINER_10MIN){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-arrow-circle-up\" style={{color:'green', marginRight:'8px', fontSize: '22px'}}/>\n          Top Gainers (10mins)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.LOSER_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-arrow-circle-down\" style={{color:'red', marginRight:'8px', fontSize: '22px'}}/>\n          Top Losers (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.ACTIVE_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-chart-bar\" style={{color:'white', marginRight:'8px', fontSize: '22px'}}/>\n          Most Active (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.TVL_UP_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fas fa-piggy-bank\" style={{color:'green', marginRight:'8px', fontSize: '22px'}}/>\n          $TVL - Most Deposited (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.TVL_DOWN_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fas fa-level-up-alt\" style={{color:'red', margin:'4px 8px', fontSize: '20px'}}/>\n          $TVL - Most Withdrawn (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.NEWEST_LISTING){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fas fa-calendar-plus\" style={{color:'green', margin:'4px 8px', fontSize: '20px'}}/>\n          Newest Listing\n        </h2>\n      )\n    }\n  }\n\n  const formatListingTime = (date) => {\n    const currentUnixTimestamp = (new Date().getTime());\n    const cleanedTimestamp = parseInt(date.substring(6, date.length - 2));\n    let difference = currentUnixTimestamp - cleanedTimestamp;\n\n    const daysDifference = Math.floor(difference/1000/60/60/24);\n    difference -= daysDifference*1000*60*60*24\n\n    const hoursDifference = Math.floor(difference/1000/60/60);\n\n    if (hoursDifference > 24) return (<span className={classes.listedTime}><span className={classes.listedTimeLabel}>LISTED: </span>{daysDifference} days ago</span>)\n    return (<span className={classes.listedTimeHrs}><span className={classes.listedTimeLabel}>LISTED: </span>{hoursDifference} hrs ago</span>)\n  }\n\n  if (!apeMode) {\n    return (\n        <div className={classes.tableContainerApeMode}>\n\n          {renderTableTitleIcon()}\n          <table className={classes.genTable}>\n            <tbody>\n            {\n              tableData.map((rToken, index) => {\n                //TODO: need this method\n                // let mostLiquidExchange = MATIC_DexLinks(rToken.mostLiquidExchangeID)\n\n                let symbolLink = \"/track/token.aspx?id=\" + rToken.mdtTokenAddr + \"&s=\" + rToken.mdtTokenSymbol + \"&ex=\" + rToken.mostLiquidExchangeID;\n                // let swapLink = Replace(Replace(mostLiquidExchange.url_swap, \"xxxTOKEN2xxx\", rToken.mdtTokenAddr), \"xxxTOKEN1xxx\", \"ETH\")\n                let tokenSymbol = (rToken.mdtTokenSymbol === \"MATIC\" || rToken.mdtTokenSymbol === \"WMATIC\") ? \"USDC\" : \"MATIC\"\n                let swapLink = \"https://app.slingshot.finance/trade/m/\" + rToken.mdtTokenAddr + \"/\" + tokenSymbol;\n                let thisEx = rToken.mostLiquidExchangeID + 'quickChart_' + rToken.mdtTokenAddr\n                let priceChange =  roundNumber((rToken.Price_PctChg_24hr*100), 1);\n                return <tr  key={index}>\n\n                  <td className={classes.tdPriceChg}>\n                    <div className={classes.dashPriceChg}>\n                      <div className={(rToken.Price_PctChg_24hr > 0) ? classes.gainNum : classes.negNum}>{(rToken.Price_PctChg_24hr > 0) ? '+' : null}{priceChange}%</div>\n                    </div>\n                    <div className={classes.dashPrice}>${rToken.current_mstbePrice.toFixed(4)}</div>\n                  </td>\n                  <td className={classes.tdTokenData}>\n                    <div className={classes.tokenSymbol}>\n                      <img src={`https://polygondex.com/track/i/coinicons/by_0x/polygon/${rToken.mdtTokenAddr}.png`}\n                        alt=\"\" className={classes.tokenIcon}\n                        onError={(e)=>{\n                          e.target.onerror = null; e.target.src=\"https://polygondex.com/track/i/coinicons/missingicon.png\"\n                        }}\n                      />\n                      {rToken.mdtTokenSymbol}\n                    </div>\n                    <div className={classes.dashVol}>\n                      <span className={classes.volLabel}>vol: </span>\n                      ${kFormatter(rToken.VolumeUSD_24hr)}\n                    </div>\n                  </td>\n                  <td className={classes.tdTVL24}>\n                    <div className={classes.totValLocked}>\n                      ${kFormatter(rToken.current_TVL_USD)}\n                    </div>\n                    <div className={(rToken.TVL_USD_24hr > 0) ? classes.gainNumTVL : classes.negNumTVL}>${kFormatter(rToken.TVL_USD_24hr)}</div>\n                  </td>\n                  <td className={classes.tdTVLTitle}>\n                    <div className={classes.tvl}>\n                      TVL\n                    </div>\n                  </td>\n\n                </tr>\n              })\n            }\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n  if (apeMode) {\n    return (\n        <div className={classes.tableContainer}>\n\n          {renderTableTitleIcon()}\n          <table className={classes.genTable}>\n            <tbody>\n            {\n              tableData.map((rToken, index) => {\n                //TODO: need this method\n                // let mostLiquidExchange = MATIC_DexLinks(rToken.mostLiquidExchangeID)\n\n                let symbolLink = \"/track/token.aspx?id=\" + rToken.mdtTokenAddr + \"&s=\" + rToken.mdtTokenSymbol + \"&ex=\" + rToken.mostLiquidExchangeID;\n                // let swapLink = Replace(Replace(mostLiquidExchange.url_swap, \"xxxTOKEN2xxx\", rToken.mdtTokenAddr), \"xxxTOKEN1xxx\", \"ETH\")\n                let tokenSymbol = (rToken.mdtTokenSymbol === \"MATIC\" || rToken.mdtTokenSymbol === \"WMATIC\") ? \"USDC\" : \"MATIC\"\n                let swapLink = \"https://app.slingshot.finance/trade/m/\" + rToken.mdtTokenAddr + \"/\" + tokenSymbol;\n                let thisEx = rToken.mostLiquidExchangeID + 'quickChart_' + rToken.mdtTokenAddr\n                let priceChange =  roundNumber((rToken.Price_PctChg_24hr*100), 1);\n                return <tr  key={index}>\n\n                  <td className={classes.tdPriceChg}>\n                    <div className={classes.dashPriceChg}>\n                      <div className={(rToken.Price_PctChg_24hr > 0) ? classes.gainNum : classes.negNum}>{(rToken.Price_PctChg_24hr > 0) ? '+' : null}{priceChange}%</div>\n                    </div>\n                    <div className={classes.dashPrice}>${rToken.current_mstbePrice}</div>\n                  </td>\n                  <td className={classes.tdTokenData}>\n                    <div className={classes.tokenSymbol}>\n                      <img src={`https://polygondex.com/track/i/coinicons/by_0x/polygon/${rToken.mdtTokenAddr}.png`}\n                        alt=\"\" className={classes.tokenIcon}\n                        onError={(e)=>{\n                          e.target.onerror = null; e.target.src=\"https://polygondex.com/track/i/coinicons/missingicon.png\"\n                        }}\n                      />\n                      {rToken.mdtTokenSymbol}\n                    </div>\n                    <div className={classes.dashVol}>\n                      <span className={classes.volLabel}>vol: </span>\n                      ${kFormatter(rToken.VolumeUSD_24hr)}\n                    </div>\n                    <div className={classes.dashListed}>\n                      {formatListingTime(rToken.DateListed)}\n                    </div>\n                  </td>\n                  <td className={classes.tdTVL24}>\n                    <div className={classes.totValLocked}>\n                      ${kFormatter(rToken.current_TVL_USD)}\n                    </div>\n                    <div className={(rToken.TVL_USD_24hr > 0) ? classes.gainNumTVL : classes.negNumTVL}>${kFormatter(rToken.TVL_USD_24hr)}</div>\n                  </td>\n                  <td className={classes.tdTVLTitle}>\n                    <div className={classes.tvl}>\n                      TVL\n                    </div>\n                  </td>\n\n                </tr>\n              })\n            }\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n}\nexport default Table;","import React, {useEffect} from 'react';\nimport './App.css';\nimport NavBar from './layout/NavBar';\n\nimport { Button } from '@material-ui/core';\nimport { useMoralis } from 'react-moralis';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { XGrid } from '@material-ui/x-grid';\nimport Table from \"./components/Table\";\nimport * as TableHeaderEnum from \"./enums/TableHeaderEnum\";\nconst axios = require('axios');\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  generalGridStyle: {\n    color: 'white'\n  },\n  welcomeMsg: {\n    margin: '12px',\n    textAlign: 'center'\n  },\n});\n\nexport default function App() {\n  const classes = useStyles();\n  const [chainData, setChainData] = React.useState([]);\n  const { authenticate, isAuthenticated, user, Moralis, logout, isInitialized } = useMoralis();\n  const [apeMode, setApeMode] = React.useState(false);\n  const [gainers24HRSortedData, setGainers24HRSortedData] = React.useState([]);\n  const [gainers10MINSortedData, setGainers10MINSortedData] = React.useState([]);\n  const [losers24HRSortedData, setLosers24HRSortedData] = React.useState([]);\n  const [tvlGainers24HRSortedData, setTVLGainers24HRSortedData] = React.useState([]);\n  const [tvlLosers24HRSortedData, setTVLLosers24HRSortedData] = React.useState([]);\n  const [mostActiveSortedData, setMostActiveSortedData] = React.useState([]);\n\n  const [mostActiveApeModeSortedData, setMostActiveApeModeSortedData] = React.useState([]);\n  const [newestListingApeModeSortedData, setNewestListingApeModeSortedData] = React.useState([]);\n  const [gainers24HRApeModeSortedData, setGainers24HRApeModeSortedData] = React.useState([]);\n  useEffect(() => {\n    getPDEXData()\n      .catch(errResp => console.error(errResp))\n  }, []);\n  useEffect(() => {\n    setLosers24HRSortedData([...gainers24HRSortedData].reverse())\n  }, [gainers24HRSortedData]);\n  useEffect(() => {\n    setTVLLosers24HRSortedData([...tvlGainers24HRSortedData].reverse())\n  }, [tvlGainers24HRSortedData]);\n  useEffect(() => {\n    if (apeMode) getApeModeData().catch(errResp => console.error(errResp));\n  }, [apeMode]);\n\n\n  const displayUserName = () => {\n    if (!isAuthenticated) return '...Please connect MetaMask with Authenticate Button';\n    return user.get('username');\n  };\n\n  const getRecords = async () => {\n    if (isAuthenticated) {\n      const query = new Moralis.Query('EthTransactions');\n      query.equalTo('from_address', user.get('ethAddress'));\n      const results = await query.find();\n      const temp = [];\n      await results.forEach((point) => {\n        const tempObj = {\n          id: point.attributes.transaction_index,\n          ...point.attributes\n        };\n        temp.push(tempObj);\n      });\n      await setChainData(temp);\n      console.log(temp);\n      await console.log(results[0].attributes);\n    } else {\n      return;\n    }\n  };\n\n  const sortGainers = (a, b, propToSortBy) => {\n    if (a[propToSortBy] > b[propToSortBy]) return -1;\n    if (a[propToSortBy] < b[propToSortBy]) return 1;\n    return 0;\n  }\n\n  const sortByListingDate = (a, b) => {\n    let trimmedA = a?.DateListed.substring(6, a.DateListed.length - 2);\n    let trimmedB = b?.DateListed.substring(6, b.DateListed.length - 2);\n    if (trimmedA > trimmedB) return -1;\n    if (trimmedA < trimmedB) return 1;\n    return 0;\n  }\n\n  const getPDEXData = async () => {\n    const pDexResp = await axios.get('https://polygondex.com/track/api/v1.aspx?apiMe=1');\n    if (pDexResp.data) {\n      const filterLowTvl = [...pDexResp.data.filter(token => token.current_TVL_USD >= 25000)]\n      setGainers24HRSortedData([...filterLowTvl.sort((a, b) => {\n        return sortGainers(a, b, 'Price_PctChg_24hr');\n      })]);\n      setGainers10MINSortedData([...filterLowTvl.sort((a, b) => {\n        return sortGainers(a, b, 'Price_PctChg_10min');\n      })]);\n      setMostActiveSortedData([...filterLowTvl.sort((a, b) => {\n        return sortGainers(a, b, 'VolumeUSD_24hr');\n      })]);\n      setTVLGainers24HRSortedData([...pDexResp.data.sort((a, b) => {\n        return sortGainers(a, b, 'TVL_USD_24hr');\n      })]);\n      // setPDexData(pDexResp.data);\n      console.log(pDexResp.data)\n    }\n  }\n\n  const getApeModeData = async () => {\n    // TODO Will need to change for updating\n    if (gainers24HRApeModeSortedData.length && mostActiveApeModeSortedData.length && newestListingApeModeSortedData.length) return;\n    const apeModeData = await axios.get('https://polygondex.com/track/api/v1.aspx?apiMe=ape');\n    if (apeModeData.data) {\n      // const filterLowTvl = [...apeModeData.data.filter(token => token.current_TVL_USD >= 25000)]\n      setGainers24HRApeModeSortedData([...apeModeData.data.sort((a, b) => {\n        return sortGainers(a, b, 'Price_PctChg_24hr');\n      })]);\n      setMostActiveApeModeSortedData([...apeModeData.data.sort((a, b) => {\n        return sortGainers(a, b, 'VolumeUSD_24hr');\n      })]);\n      setNewestListingApeModeSortedData([...apeModeData.data.sort((a, b) => {\n        return sortByListingDate(a, b);\n      })]);\n      // setPDexData(apeModeData.data);\n      console.log(apeModeData.data)\n    }\n  }\n\n  const renderGenericTable = (tableData, headerEnum) => {\n    if (!tableData.length) return;\n    return (\n      <Table\n          filteredTableData={tableData}\n          tableHeaderData={headerEnum}\n          apeMode={apeMode}\n      />\n    )\n  }\n\n  const apeModeCharts = [\n    renderGenericTable(gainers24HRApeModeSortedData, TableHeaderEnum.GAINER_24HR),\n    renderGenericTable(newestListingApeModeSortedData, TableHeaderEnum.NEWEST_LISTING),\n    renderGenericTable(mostActiveApeModeSortedData, TableHeaderEnum.ACTIVE_24HR)\n  ];\n  const regularCharts = [\n    renderGenericTable(gainers24HRSortedData, TableHeaderEnum.GAINER_24HR),\n    renderGenericTable(losers24HRSortedData, TableHeaderEnum.LOSER_24HR),\n    renderGenericTable(mostActiveSortedData, TableHeaderEnum.ACTIVE_24HR),\n    renderGenericTable(gainers10MINSortedData, TableHeaderEnum.GAINER_10MIN),\n    renderGenericTable(tvlGainers24HRSortedData, TableHeaderEnum.TVL_UP_24HR),\n    renderGenericTable(tvlLosers24HRSortedData, TableHeaderEnum.TVL_DOWN_24HR),\n  ];\n\n\n  const columns = [\n    { title: 'block_hash', field: 'block_hash' },\n    { title: 'block_number', field: 'block_number' },\n    { title: 'block_timestamp name', field: 'block_timestamp' },\n    { title: 'confirmed name', field: 'confirmed' },\n    { title: 'createdAt', field: 'createdAt' },\n    { title: 'from_address', field: 'from_address' },\n    { title: 'gas', field: 'gas' },\n    { title: 'gas_price name', field: 'gas_price' },\n    { title: 'hash name', field: 'hash' },\n    { title: 'input', field: 'input' },\n    { title: 'nonce', field: 'nonce' },\n    // { title: 'receipt_contract_address', field: 'receipt_contract_address' },\n    { title: 'receipt_cumulative_gas_used name', field: 'receipt_cumulative_gas_used' },\n    { title: 'receipt_gas_used name', field: 'receipt_gas_used' },\n    // { title: 'receipt_root', field: 'receipt_root' },\n    { title: 'receipt_status', field: 'receipt_status' },\n    { title: 'to_address', field: 'to_address' },\n    { title: 'transaction_index', field: 'transaction_index' }\n  ];\n\n  return (\n    <div className={'primaryBackground'}>\n      <NavBar tokenList={gainers24HRSortedData} setApeMode={setApeMode} apeMode={apeMode}/>\n      <Button style={{ background: 'lightgreen', width: '150px', margin: '30px' }} onClick={() => authenticate()}>\n        Authenticate\n      </Button>\n      <Button style={{ background: '#F9525F', width: '150px', margin: '30px' }} onClick={() => logout()}>\n        Logout\n      </Button>\n      <Button style={{ background: 'grey', width: '150px', margin: '30px' }} onClick={() => getRecords()}>\n        Refresh Stats\n      </Button>\n\n      <h3 className={classes.welcomeMsg}>Welcome {displayUserName()}</h3>\n      {/*<div style={{ margin: 'auto', height: 800, width: '96%', backgroundColor: '#131416', color: 'white' }}>*/}\n      {/*  <XGrid*/}\n      {/*    rows={chainData}*/}\n      {/*    columns={columns}*/}\n      {/*    className={classes.generalGridStyle}*/}\n      {/*    disableColumnFilter={true}*/}\n      {/*    disableColumnMenu={true}*/}\n      {/*  />*/}\n      {/*</div>*/}\n\n      {!apeMode ? regularCharts : apeModeCharts}\n\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from 'react-moralis';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nReactDOM.render(\n  <MoralisProvider\n    appId=\"yXYoxCHXnLT54ylFTQUM48MmxJWCYnFIKdirLvJU\"\n    serverUrl=\"https://l0ofdtitry2q.usemoralis.com:2053/server\"\n  >\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const TableHeaderEnum = Object.freeze({\n  GAINER_24HR: 'GAINER_24HR',\n  GAINER_10MIN: 'GAINER_10MIN',\n  LOSER_24HR: 'LOSER_24HR',\n  ACTIVE_24HR: 'ACTIVE_24HR',\n  TVL_UP_24HR: 'TVL_UP_24HR',\n  TVL_DOWN_24HR: 'TVL_DOWN_24HR',\n  NEWEST_LISTING: 'NEWEST_LISTING'\n});\n\nmodule.exports = TableHeaderEnum"],"sourceRoot":""}