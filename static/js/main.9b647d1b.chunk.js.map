{"version":3,"sources":["layout/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","navBar","NavBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","className","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","axios","require","table","minWidth","generalGridStyle","welcomeMsg","margin","textAlign","tableContainer","border","background","boxShadow","genTable","tableLayout","tableHeader","fontSize","lineHeight","tdPriceChg","borderTop","dashPriceChg","gainNum","negNum","dashPrice","whiteSpace","tdTokenData","tokenSymbol","dashVol","tdTVL24","totValLocked","tvlChange","tdTVLTitle","tvl","writingMode","textOrientation","App","chainData","setChainData","useMoralis","authenticate","isAuthenticated","user","Moralis","logout","isInitialized","pDexData","setPDexData","gainersSortedData","setGainersSortedData","losersSortedData","setLosersSortedData","console","log","getRecords","a","query","Query","equalTo","get","find","results","temp","forEach","point","tempObj","attributes","transaction_index","push","length","then","response","data","sort","b","Price_PctChg_24hr","catch","error","Button","style","rows","columns","field","disableColumnFilter","disableColumnMenu","map","rToken","index","mdtTokenAddr","mdtTokenSymbol","mostLiquidExchangeID","priceChange","toFixed","current_mstbePrice","VolumeUSD_24hr","current_TVL_USD","TVL_USD_24hr","renderTable","renderLosersTable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.9b647d1b.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  navBar: {\n    backgroundColor: '#1D1D1D'\n  }\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.navBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            POLYGONDEX\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{ root: classes.inputRoot, input: classes.inputInput }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n\nexport default NavBar\n","import React from 'react';\nimport './App.css';\nimport NavBar from './layout/NavBar';\n\nimport { Button } from '@material-ui/core';\nimport { useMoralis } from 'react-moralis';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { XGrid } from '@material-ui/x-grid';\nconst axios = require('axios');\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  generalGridStyle: {\n    color: 'white'\n  },\n  welcomeMsg: {\n    margin: '12px',\n    textAlign: 'center'\n  },\n  tableContainer: {\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    margin: '12px',\n    padding: '5px',\n    boxShadow: '3px 3px 3px #000',\n    width: '33%',\n    display: 'inline-block',\n  },\n  genTable: {\n    width: '100%',\n    tableLayout: 'fixed'\n  },\n  tableHeader: {\n    padding: '7px',\n    margin: '1px',\n    background: '#000',\n    borderRadius: '7px 7px 0 0',\n    fontSize: '16px',\n    lineHeight: '27px',\n    minWidth: '270px',\n  },\n  tdPriceChg: {\n    width: '25%',\n    borderTop: '1px dotted #656565',\n    padding: '5px 4px 5px 5px'\n  },\n  dashPriceChg: {\n    color: 'white'\n  },\n  gainNum: {\n    color: '#02C079'\n  },\n  negNum: {\n    color: 'red'\n  },\n  dashPrice: {\n    whiteSpace: 'nowrap',\n    color: 'white'\n  },\n  tdTokenData: {\n    borderTop: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '33%'\n  },\n  tokenSymbol: {\n    color: '#97dfff'\n  },\n  dashVol: {\n    color: 'white'\n  },\n  tdTVL24: {\n    borderTop: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '33%'\n  },\n  totValLocked: {\n    color: 'white'\n  },\n  tvlChange: {\n    color: 'white'\n  },\n  tdTVLTitle: {\n    borderTop: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    width: '5%'\n  },\n  tvl: {\n    writingMode: 'vertical-rl',\n    textOrientation: 'upright',\n    color: 'white'\n  }\n});\n\nexport default function App() {\n  const classes = useStyles();\n  const [chainData, setChainData] = React.useState([]);\n  const { authenticate, isAuthenticated, user, Moralis, logout, isInitialized } = useMoralis();\n  const [pDexData, setPDexData] = React.useState([]);\n  const [gainersSortedData, setGainersSortedData] = React.useState([]);\n  const [losersSortedData, setLosersSortedData] = React.useState([]);\n  console.log(isInitialized);\n\n  const displayUserName = () => {\n    if (!isAuthenticated) return '...Please connect MetaMask with Authenticate Button';\n    return user.get('username');\n  };\n\n  const getRecords = async () => {\n    if (isAuthenticated) {\n      const query = new Moralis.Query('EthTransactions');\n      query.equalTo('from_address', user.get('ethAddress'));\n      const results = await query.find();\n      const temp = [];\n      await results.forEach((point) => {\n        const tempObj = {\n          id: point.attributes.transaction_index,\n          ...point.attributes\n        };\n        console.log(tempObj);\n        temp.push(tempObj);\n        console.log(temp);\n      });\n      await setChainData(temp);\n      console.log(temp);\n      await console.log(results[0].attributes);\n    } else {\n      return;\n    }\n  };\n\n  const getPDEXData = () => {\n    axios.get('https://polygondex.com/track/api/v1.aspx?apiMe=1')\n    .then(function (response) {\n      // handle success\n      console.log(response);\n      setGainersSortedData([...response.data.sort((a, b) => {\n        if (a.Price_PctChg_24hr > b.Price_PctChg_24hr) {\n          return -1;\n        }\n        if (a.Price_PctChg_24hr < b.Price_PctChg_24hr) {\n          return 1;\n        }\n        // a must be equal to b\n        return 0;\n      })])\n      setLosersSortedData([...response.data.sort((a, b) => {\n        if (a.Price_PctChg_24hr < b.Price_PctChg_24hr) {\n          return -1;\n        }\n        if (a.Price_PctChg_24hr > b.Price_PctChg_24hr) {\n          return 1;\n        }\n        // a must be equal to b\n        return 0;\n      })])\n      setPDexData(response.data);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n  }\n  if (!pDexData.length) getPDEXData()\n\n  console.log(chainData);\n\n  const renderTable = () => {\n    if (!pDexData.length) return null;\n    let isApeMode = false;\n\n    if (!isApeMode) {\n      return (\n          <div className={classes.tableContainer}>\n\n            <h2 className={classes.tableHeader}>\n              <i className=\"fa fa-arrow-circle-up\" style={{color:'green', margin:'4px 8px', fontSize: '20px'}}></i>\n              Top Gainers (24hrs)\n            </h2>\n            <table className={classes.genTable}>\n              <tbody>\n              {\n                gainersSortedData.map((rToken, index) => {\n                  //TODO: need this method\n                  // let mostLiquidExchange = MATIC_DexLinks(rToken.mostLiquidExchangeID)\n\n                  let symbolLink = \"/track/token.aspx?id=\" + rToken.mdtTokenAddr + \"&s=\" + rToken.mdtTokenSymbol + \"&ex=\" + rToken.mostLiquidExchangeID;\n                  // let swapLink = Replace(Replace(mostLiquidExchange.url_swap, \"xxxTOKEN2xxx\", rToken.mdtTokenAddr), \"xxxTOKEN1xxx\", \"ETH\")\n                  let tokenSymbol = (rToken.mdtTokenSymbol === \"MATIC\" || rToken.mdtTokenSymbol === \"WMATIC\") ? \"USDC\" : \"MATIC\"\n                  let swapLink = \"https://app.slingshot.finance/trade/m/\" + rToken.mdtTokenAddr + \"/\" + tokenSymbol;\n                  let thisEx = rToken.mostLiquidExchangeID + 'quickChart_' + rToken.mdtTokenAddr\n                  let priceChange = (rToken.Price_PctChg_24hr*100).toFixed(2);\n                  console.log(rToken)\n                  return <tr>\n\n                    <td className={classes.tdPriceChg}>\n                      <div className={classes.dashPriceChg}>\n                        <div className={(rToken.Price_PctChg_24hr > 0) ? classes.gainNum : classes.negNum}>{priceChange}%</div>\n                      </div>\n                      <div className={classes.dashPrice}>{rToken.current_mstbePrice}</div>\n                    </td>\n                    <td className={classes.tdTokenData}>\n                      <div className={classes.tokenSymbol}>\n                        {rToken.mdtTokenSymbol}\n                      </div>\n                      <div className={classes.dashVol}>vol: {rToken.VolumeUSD_24hr}</div>\n                    </td>\n                    <td className={classes.tdTVL24}>\n                      <div className={classes.totValLocked}>\n                        {rToken.current_TVL_USD}\n                      </div>\n                      <div className={(rToken.TVL_USD_24hr > 0) ? classes.gainNum : classes.negNum}>{rToken.TVL_USD_24hr}</div>\n                    </td>\n                    <td className={classes.tdTVLTitle}>\n                      <div className={classes.tvl}>\n                        TVL\n                      </div>\n                    </td>\n\n                  </tr>\n                })\n              }\n              </tbody>\n            </table>\n          </div>\n      )\n    }\n  }\n\n  const renderLosersTable = () => {\n    if (!pDexData.length) return null;\n    let isApeMode = false;\n\n    if (!isApeMode) {\n      return (\n          <div className={classes.tableContainer}>\n\n            <h2 className={classes.tableHeader}>\n              <i className=\"fa fa-arrow-circle-down\" style={{color:'red', margin:'4px 8px', fontSize: '20px'}}></i>\n              Top Gainers (24hrs)\n            </h2>\n            <table className={classes.genTable}>\n              <tbody>\n              {\n                losersSortedData.map((rToken, index) => {\n                  //TODO: need this method\n                  // let mostLiquidExchange = MATIC_DexLinks(rToken.mostLiquidExchangeID)\n\n                  let symbolLink = \"/track/token.aspx?id=\" + rToken.mdtTokenAddr + \"&s=\" + rToken.mdtTokenSymbol + \"&ex=\" + rToken.mostLiquidExchangeID;\n                  // let swapLink = Replace(Replace(mostLiquidExchange.url_swap, \"xxxTOKEN2xxx\", rToken.mdtTokenAddr), \"xxxTOKEN1xxx\", \"ETH\")\n                  let tokenSymbol = (rToken.mdtTokenSymbol === \"MATIC\" || rToken.mdtTokenSymbol === \"WMATIC\") ? \"USDC\" : \"MATIC\"\n                  let swapLink = \"https://app.slingshot.finance/trade/m/\" + rToken.mdtTokenAddr + \"/\" + tokenSymbol;\n                  let thisEx = rToken.mostLiquidExchangeID + 'quickChart_' + rToken.mdtTokenAddr\n                  let priceChange = (rToken.Price_PctChg_24hr*100).toFixed(2);\n                  console.log(rToken)\n                  return <tr>\n\n                    <td className={classes.tdPriceChg}>\n                      <div className={classes.dashPriceChg}>\n                        <div className={(rToken.Price_PctChg_24hr > 0) ? classes.gainNum : classes.negNum}>{priceChange}%</div>\n                      </div>\n                      <div className={classes.dashPrice}>{rToken.current_mstbePrice}</div>\n                    </td>\n                    <td className={classes.tdTokenData}>\n                      <div className={classes.tokenSymbol}>\n                        {rToken.mdtTokenSymbol}\n                      </div>\n                      <div className={classes.dashVol}>vol: {rToken.VolumeUSD_24hr}</div>\n                    </td>\n                    <td className={classes.tdTVL24}>\n                      <div className={classes.totValLocked}>\n                        {rToken.current_TVL_USD}\n                      </div>\n                      <div className={(rToken.TVL_USD_24hr > 0) ? classes.gainNum : classes.negNum}>{rToken.TVL_USD_24hr}</div>\n                    </td>\n                    <td className={classes.tdTVLTitle}>\n                      <div className={classes.tvl}>\n                        TVL\n                      </div>\n                    </td>\n\n                  </tr>\n                })\n              }\n              </tbody>\n            </table>\n          </div>\n      )\n    }\n  }\n\n  const columns = [\n    { title: 'block_hash', field: 'block_hash' },\n    { title: 'block_number', field: 'block_number' },\n    { title: 'block_timestamp name', field: 'block_timestamp' },\n    { title: 'confirmed name', field: 'confirmed' },\n    { title: 'createdAt', field: 'createdAt' },\n    { title: 'from_address', field: 'from_address' },\n    { title: 'gas', field: 'gas' },\n    { title: 'gas_price name', field: 'gas_price' },\n    { title: 'hash name', field: 'hash' },\n    { title: 'input', field: 'input' },\n    { title: 'nonce', field: 'nonce' },\n    // { title: 'receipt_contract_address', field: 'receipt_contract_address' },\n    { title: 'receipt_cumulative_gas_used name', field: 'receipt_cumulative_gas_used' },\n    { title: 'receipt_gas_used name', field: 'receipt_gas_used' },\n    // { title: 'receipt_root', field: 'receipt_root' },\n    { title: 'receipt_status', field: 'receipt_status' },\n    { title: 'to_address', field: 'to_address' },\n    { title: 'transaction_index', field: 'transaction_index' }\n  ];\n\n  return (\n    <div className={'primaryBackground'}>\n      <NavBar />\n      <Button style={{ background: 'lightgreen', width: '150px', margin: '30px' }} onClick={() => authenticate()}>\n        Authenticate\n      </Button>\n      <Button style={{ background: '#F9525F', width: '150px', margin: '30px' }} onClick={() => logout()}>\n        Logout\n      </Button>\n      <Button style={{ background: 'grey', width: '150px', margin: '30px' }} onClick={() => getRecords()}>\n        Refresh Stats\n      </Button>\n\n      <h3 className={classes.welcomeMsg}>Welcome {displayUserName()}</h3>\n      <div style={{ margin: 'auto', height: 800, width: '96%', backgroundColor: '#131416', color: 'white' }}>\n        <XGrid\n          rows={chainData}\n          columns={columns}\n          className={classes.generalGridStyle}\n          disableColumnFilter={true}\n          disableColumnMenu={true}\n        />\n      </div>\n\n      {/*{renderGraph()}*/}\n      {renderTable()}\n      {renderLosersTable()}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from 'react-moralis';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nReactDOM.render(\n  <MoralisProvider\n    appId=\"yXYoxCHXnLT54ylFTQUM48MmxJWCYnFIKdirLvJU\"\n    serverUrl=\"https://l0ofdtitry2q.usemoralis.com:2053/server\"\n  >\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}