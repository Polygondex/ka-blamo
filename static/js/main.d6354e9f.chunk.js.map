{"version":3,"sources":["images/pDexIcon2.png","images/apeModeIcon.svg","images/monkey.svg","layout/NavBar.js","components/TokenTable.js","components/DexTable.js","components/MainCharts.js","App.js","reportWebVitals.js","index.js","enums/TableHeaderEnum.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","titleWrapper","display","alignItems","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","justifyContent","autocompleteSearch","margin","sectionDesktop","sectionMobile","navBar","dex","color","pdexIcon","maxHeight","tokenIcon","border","autocompleteOption","minWidth","flexDirection","autocompleteOptionWrapper","overflow","whiteSpace","textOverflow","apeModeIcon","marginTop","apeModeOffIcon","filter","switchBaseColor","switchLabel","fontSize","fontWeight","lineHeight","CssTextField","withStyles","root","borderBottomColor","borderColor","TextField","PurpleSwitch","switchBase","checked","track","Switch","NavBar","tokenList","apeMode","setApeMode","defaultProps","options","getOptionLabel","option","mdtTokenName","mdtTokenSymbol","renderOption","Fragment","className","classes","src","mdtTokenAddr","alt","onError","e","target","onerror","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","apeModeActivated","setApeModeActivated","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","Badge","badgeContent","event","currentTarget","AppBar","Toolbar","edge","menuButton","Typography","variant","noWrap","FormGroup","row","apeModeFormGroup","FormControlLabel","control","onChange","name","icon","checkedIcon","label","labelPlacement","Autocomplete","size","freeSolo","PaperComponent","children","Paper","style","background","closeIcon","renderInput","params","InputProps","startAdornment","InputAdornment","InputLabelProps","tableContainer","boxShadow","tableContainerApeMode","genTable","tableLayout","tableHeader","top","borderBottom","tdPriceChg","textAlign","dashPriceChg","marginBottom","gainNum","paddingBottom","negNum","gainNumTVL","negNumTVL","dashPrice","tdTokenData","tokenSymbol","dashVol","volLabel","tdTVL24","totValLocked","tvlChange","tdTVLTitle","tvl","writingMode","textOrientation","listedTimeLabel","listedTime","listedTimeHrs","kFormatter","num","Math","abs","sign","toFixed","TokenTable","filteredTableData","tableHeaderData","tableData","TableHeaderEnum","map","rToken","index","priceChange","value","precision","multiplier","pow","round","roundNumber","Price_PctChg_24hr","priceChangePct24hr","priceChangeFiat24hr","current_mstbePrice","priceChangeFiat24hr4Decimal","iconAddress","tokenTickerSymbol","volFormatedToKs","VolumeUSD_24hr","formatListingTimeInDaysHours","date","difference","Date","getTime","parseInt","substring","length","daysDifference","floor","hoursDifference","formatListingTime","DateListed","tvlCurrentFormatedToKs","current_TVL_USD","tvlChange24hrs","TVL_USD_24hr","tvlChangeFormatedToKs","dashListed","columnHeaders","textDecoration","syncIndicator","tdDexData","dashDexTitle","tdVolume","dexSyncCol","dexVolColHeader","dashDexVol24","dexTVLCol","mFormatter","DexTable","console","log","renderTableTitleIcon","DexName","str_syncDiff","includes","DexName_Display","Volume24hrs","max_TotalLiquidityUSD","TVL24hrs","majorsChartBox","majorsInfoRow","zIndex","majorsIconSymbol","verticalAlign","majorsIcon","float","majorsSymbol","majorsPriceAndChg","paddingTop","majorsPrice","fontFamily","majorsPriceChgPct_gain","majorsPriceChgPct_loss","MainChart","props","coinID","symbol","iconURL","chartData","setChartData","setPriceOPEN","setPriceCLOSE","setPriceChng","PriceChngPct","setPriceChngPct","classColors","setclassColors","pricePrefix","setpricePrefix","useEffect","getPDEXTokenData","catch","err","error","a","axios","get","tokenData","data","getChartColorData","tempPriceOpen","tempPriceClose","tempPriceChng","href","instance","QuoteSymbol","JSONdata","containerObjID","currentDatePlusOne","setDate","getDate","currentDatePlusOneNow","getFullYear","getMonth","threeDaysAgo","chartStart","chartEnd","linesGrid","linesHover","colorUP_fill","colorDOWN_fill","dataTable","anychart","table","addData","chart","stock","plot","yAxis","orientation","priceIndicator","stroke","thickness","dash","risingStroke","risingLabel","fallingStroke","fallingLabel","series","splineArea","mapAs","fill","pointWidth","xGrid","enabled","yGrid","xMinorGrid","crosshair","displayMode","xStroke","yStroke","selectRange","ui","rangeSelector","scroller","container","draw","drawChartType1","require","generalGridStyle","welcomeMsg","divMainDish","homeLeftCol","homeRightCol","majorCharts","App","setChainData","useMoralis","authenticate","isAuthenticated","user","Moralis","logout","isInitialized","gainers24HRSortedData","setGainers24HRSortedData","gainers10MINSortedData","setGainers10MINSortedData","losers24HRSortedData","setLosers24HRSortedData","tvlGainers24HRSortedData","setTVLGainers24HRSortedData","tvlLosers24HRSortedData","setTVLLosers24HRSortedData","mostActiveSortedData","setMostActiveSortedData","mostActiveApeModeSortedData","setMostActiveApeModeSortedData","newestListingApeModeSortedData","setNewestListingApeModeSortedData","gainers24HRApeModeSortedData","setGainers24HRApeModeSortedData","polygonDexSortedData","setPolygonDexSortedData","errResp","getPDEXData","reverse","getApeModeData","getRecords","query","Query","equalTo","find","results","temp","forEach","point","tempObj","attributes","transaction_index","push","sortGainers","b","propToSortBy","sortByListingDate","trimmedA","trimmedB","pDexResp","sort","pDexTokenResp","filterLowTvl","token","apeModeData","renderGenericTokenTable","headerEnum","apeModeCharts","regularCharts","Button","MainCharts","renderGenericDexTable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","window","licenseKey","ReactDOM","render","appId","serverUrl","document","getElementById","Object","freeze","GAINER_24HR","GAINER_10MIN","LOSER_24HR","ACTIVE_24HR","TVL_UP_24HR","TVL_DOWN_24HR","NEWEST_LISTING","TOP_DEXs","module","exports"],"mappings":"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","file":"static/js/main.d6354e9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pDexIcon2.ad55a4d2.png\";","export default __webpack_public_path__ + \"static/media/apeModeIcon.c483b342.svg\";","export default __webpack_public_path__ + \"static/media/monkey.ff4b692e.svg\";","import React from 'react';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport pdexIcon from '../images/pDexIcon2.png';\nimport apeModeIcon from '../images/apeModeIcon.svg';\nimport monkeyIcon from '../images/monkey.svg';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  titleWrapper: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  autocompleteSearch: {\n    width: '32ch',\n    margin: '0 16px',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  navBar: {\n    backgroundColor: '#000000'\n  },\n  dex: {\n    color: '#A874FF'\n  },\n  pdexIcon: {\n    maxHeight: '40px',\n    marginRight: '8px'\n  },\n  tokenIcon: {\n    height: '16px',\n    width: '16px',\n    marginRight: '8px',\n    border: 'none'\n  },\n  autocompleteOption: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: '0',\n    flexDirection: 'row'\n  },\n  autocompleteOptionWrapper: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    minWidth: '0',\n  },\n  apeModeIcon: {\n    maxHeight: '26px',\n    marginTop: '-3px'\n  },\n  apeModeOffIcon: {\n    maxHeight: '26px',\n    filter: 'brightness(0.5)',\n    marginTop: '-3px'\n  },\n  switchBaseColor: {\n    backgroundColor: '#bd9ef2'\n  },\n  switchLabel: {\n    fontSize: '0.85rem !important',\n    fontWeight: '600 !important',\n    lineHeight: '1 !important'\n  }\n}));\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'darkGreen',\n      },\n      '&:hover fieldset': {\n        borderColor: 'green',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n    color: 'white',\n  },\n})(TextField);\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: '#A874FF',\n    '&$checked': {\n      color: '#A874FF',\n    },\n    '&$checked + $track': {\n      backgroundColor: '#A874FF',\n    }\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst NavBar = ({tokenList, apeMode, setApeMode}) => {\n  const defaultProps = {\n    options: tokenList,\n    getOptionLabel: (option) => `${option.mdtTokenName} - ${option.mdtTokenSymbol}`,\n    renderOption: (option) => (\n        <React.Fragment>\n          <div className={classes.autocompleteOption}>\n\n            <img\n                src={`https://polygondex.com/track/i/coinicons/by_0x/polygon/${option.mdtTokenAddr}.png`}\n                alt=\"\" className={classes.tokenIcon}\n                onError={(e)=>{\n                  e.target.onerror = null; e.target.src=\"https://polygondex.com/track/i/coinicons/missingicon.png\"\n                }}\n            />\n            <span className={classes.autocompleteOptionWrapper}>\n            {option.mdtTokenSymbol} - {option.mdtTokenName}\n          </span>\n          </div>\n\n        </React.Fragment>\n    )\n  };\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [apeModeActivated, setApeModeActivated] = React.useState(apeMode || false);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleApeModeChange = (event) => {\n    setApeMode(event.target.checked);\n    setApeModeActivated(event.target.checked);\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n      <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          id={menuId}\n          keepMounted\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          open={isMenuOpen}\n          onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n      <Menu\n          anchorEl={mobileMoreAnchorEl}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          id={mobileMenuId}\n          keepMounted\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          open={isMobileMenuOpen}\n          onClose={handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"primary-search-account-menu\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n  );\n\n  return (\n      <div className={classes.grow}>\n        <AppBar position=\"static\" className={classes.navBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\">\n              <MenuIcon />\n            </IconButton>\n            <div className={classes.titleWrapper}>\n              <img className={classes.pdexIcon} src={pdexIcon} alt='PDexLogo'/>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                Polygon\n                <span className={classes.dex}>DEX</span>\n              </Typography>\n            </div>\n            <div className={classes.grow} />\n            <FormGroup aria-label=\"position\" row className={classes.apeModeFormGroup}>\n              <FormControlLabel\n                  control={<PurpleSwitch checked={apeModeActivated} onChange={handleApeModeChange} name=\"apeMode\" classes={{track:classes.switchBaseColor}}\n                            icon={<img className={classes.apeModeOffIcon} src={apeModeIcon} alt='ApeMode Icon'/>}\n                            checkedIcon={<img className={classes.apeModeIcon} src={apeModeIcon} alt='ApeMode Icon'/>}\n                  />}\n                  label={<Typography className={classes.switchLabel}>Ape Mode</Typography>}\n                  labelPlacement=\"top\"\n              />\n            </FormGroup>\n\n            <Autocomplete\n                {...defaultProps}\n                id=\"auto-complete\"\n                size={'small'}\n                freeSolo\n                PaperComponent={({children}) => (\n                    <Paper style={{ background: \"lightgrey\" }}>{children}</Paper>\n                )}\n                closeIcon={<CloseIcon fontSize=\"small\" style={{ color: 'red', marginLeft: 'auto' }} />}\n                renderInput={(params) => (\n                    <CssTextField\n                        className={classes.autocompleteSearch}\n                        {...params}\n                        label=\"Crypto Quote\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputProps={{ ...params.InputProps, style: {color:'white'}, startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                          )\n                        }}\n                        InputLabelProps={{\n                          style: {\n                            color: 'white'\n                          }\n                        }}\n                    />\n                )}\n            />\n            {/*<div className={classes.sectionDesktop}>*/}\n            {/*  <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">*/}\n            {/*    <Badge badgeContent={4} color=\"secondary\">*/}\n            {/*      <MailIcon />*/}\n            {/*    </Badge>*/}\n            {/*  </IconButton>*/}\n            {/*  <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">*/}\n            {/*    <Badge badgeContent={17} color=\"secondary\">*/}\n            {/*      <NotificationsIcon />*/}\n            {/*    </Badge>*/}\n            {/*  </IconButton>*/}\n            {/*  <IconButton*/}\n            {/*      edge=\"end\"*/}\n            {/*      aria-label=\"account of current user\"*/}\n            {/*      aria-controls={menuId}*/}\n            {/*      aria-haspopup=\"true\"*/}\n            {/*      onClick={handleProfileMenuOpen}*/}\n            {/*      color=\"inherit\"*/}\n            {/*  >*/}\n            {/*    <AccountCircle />*/}\n            {/*  </IconButton>*/}\n            {/*</div>*/}\n            {/*<div className={classes.sectionMobile}>*/}\n            {/*  <IconButton*/}\n            {/*      aria-label=\"show more\"*/}\n            {/*      aria-controls={mobileMenuId}*/}\n            {/*      aria-haspopup=\"true\"*/}\n            {/*      onClick={handleMobileMenuOpen}*/}\n            {/*      color=\"inherit\"*/}\n            {/*  >*/}\n            {/*    <MoreIcon />*/}\n            {/*  </IconButton>*/}\n            {/*</div>*/}\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n  );\n}\n\nexport default NavBar\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport * as TableHeaderEnum from \"../enums/TableHeaderEnum\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    margin: '8px',\n    padding: '0 5px 5px',\n    boxShadow: '3px 3px 3px #000',\n    width: '30%',\n    display: 'inline-block',\n    height: '600px',\n    position: 'relative',\n    overflow: 'scroll',\n  },\n  tableContainerApeMode: {\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    margin: '12px',\n    padding: '0 5px 5px',\n    boxShadow: '3px 3px 3px #000',\n    width: '30%',\n    display: 'inline-block',\n    height: '900px',\n    position: 'relative',\n    overflow: 'scroll',\n  },\n  genTable: {\n    width: '100%',\n    tableLayout: 'fixed',\n    backgroundColor: '#1d1f22'\n  },\n  tableHeader: {\n    padding: '7px',\n    margin: '1px',\n    background: '#000',\n    borderRadius: '7px 7px 0 0',\n    fontSize: '20px',\n    lineHeight: '27px',\n    minWidth: '270px',\n    position: 'sticky',\n    top: '0',\n    borderBottom: '1px dotted #656565',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tdPriceChg: {\n    width: '20%',\n    borderBottom: '1px dotted #656565',\n    padding: '5px 8px 5px 5px',\n    textAlign: 'end'\n  },\n  dashPriceChg: {\n    color: 'white',\n    marginBottom: '4px'\n  },\n  gainNum: {\n    color: '#02C079',\n    fontSize: '19px',\n    fontWeight: '600',\n    paddingBottom: '8px'\n  },\n  negNum: {\n    color: 'red',\n    fontSize: '19px',\n    fontWeight: '600',\n    paddingBottom: '8px'\n  },\n  gainNumTVL: {\n    color: '#02C079',\n    fontSize: '13px',\n    fontWeight: '600'\n  },\n  negNumTVL: {\n    color: 'red',\n    fontSize: '13px',\n    fontWeight: '600'\n  },\n  dashPrice: {\n    whiteSpace: 'nowrap',\n    color: 'white',\n    fontSize: '12px',\n    fontWeight: '400'\n  },\n  tdTokenData: {\n    borderBottom: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '50%'\n  },\n  tokenSymbol: {\n    color: '#97dfff',\n    display: 'flex',\n    alignItems: 'center',\n    fontWeight: '600',\n    fontSize: '19px',\n    paddingBottom: '8px'\n  },\n  tokenIcon: {\n    height: '17px',\n    width: '17px',\n    margin: '3px 6px 3px 3px'\n  },\n  dashVol: {\n    color: 'white',\n    fontSize: '13px'\n  },\n  volLabel: {\n    color: '#999797'\n  },\n  tdTVL24: {\n    borderBottom: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '18%',\n    textAlign: 'end'\n  },\n  totValLocked: {\n    color: 'white',\n    fontSize: '13px',\n    paddingBottom: '8px'\n  },\n  tvlChange: {\n    color: 'white',\n    fontSize: '13px'\n  },\n  tdTVLTitle: {\n    borderBottom: '1px dotted #656565',\n    padding: '5px 4px 5px 5px',\n    width: '5%',\n  },\n  tvl: {\n    writingMode: 'vertical-rl',\n    textOrientation: 'upright',\n    color: '#727d73',\n    fontSize: '12px',\n    lineHeight: '12px',\n    fontWeight: '600',\n    textAlign: 'right',\n  },\n  listedTimeLabel:{\n    color: '#999797',\n    fontSize: '13px'\n  },\n  listedTime: {\n    fontSize: '13px'\n  },\n  listedTimeHrs: {\n    color: 'yellow',\n    fontSize: '13px'\n  }\n});\n\nconst kFormatter = (num) => {\n  return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'k' : num.toFixed(2);\n}\n\nconst roundNumber = (value, precision) => {\n    let multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\nconst TokenTable = ({filteredTableData, tableHeaderData, apeMode}) => {\n  const classes = useStyles();\n  const [tableData] = React.useState(filteredTableData);\n\n  const renderTableTitleIcon = () => {\n    if (tableHeaderData === TableHeaderEnum.GAINER_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-arrow-circle-up\" style={{color:'green', marginRight:'8px', fontSize: '22px'}}/>\n          Top Gainers (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.GAINER_10MIN){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-arrow-circle-up\" style={{color:'green', marginRight:'8px', fontSize: '22px'}}/>\n          Top Gainers (10mins)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.LOSER_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-arrow-circle-down\" style={{color:'red', marginRight:'8px', fontSize: '22px'}}/>\n          Top Losers (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.ACTIVE_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fa fa-chart-bar\" style={{color:'white', marginRight:'8px', fontSize: '22px'}}/>\n          Most Active (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.TVL_UP_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fas fa-piggy-bank\" style={{color:'green', marginRight:'8px', fontSize: '22px'}}/>\n          $TVL - Most Deposited (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.TVL_DOWN_24HR){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fas fa-level-up-alt\" style={{color:'red', margin:'4px 8px', fontSize: '20px'}}/>\n          $TVL - Most Withdrawn (24hrs)\n        </h2>\n      )\n    }\n    if (tableHeaderData === TableHeaderEnum.NEWEST_LISTING){\n      return (\n        <h2 className={classes.tableHeader}>\n          <i className=\"fas fa-calendar-plus\" style={{color:'green', margin:'4px 8px', fontSize: '20px'}}/>\n          Newest Listing\n        </h2>\n      )\n    }\n  }\n\n  const formatListingTime = (date) => {\n    const currentUnixTimestamp = (new Date().getTime());\n    const cleanedTimestamp = parseInt(date.substring(6, date.length - 2));\n    let difference = currentUnixTimestamp - cleanedTimestamp;\n\n    const daysDifference = Math.floor(difference/1000/60/60/24);\n    difference -= daysDifference*1000*60*60*24\n\n    const hoursDifference = Math.floor(difference/1000/60/60);\n\n    if (daysDifference) return (<span className={classes.listedTime}><span className={classes.listedTimeLabel}>LISTED: </span>{daysDifference} days ago</span>)\n    return (<span className={classes.listedTimeHrs}><span className={classes.listedTimeLabel}>LISTED: </span>{hoursDifference} hrs ago</span>)\n  }\n\n  return (\n      <div className={apeMode ? classes.tableContainerApeMode : classes.tableContainer}>\n\n        {renderTableTitleIcon()}\n        <table className={classes.genTable}>\n          <tbody>\n          {\n            tableData.map((rToken, index) => {\n              //TODO: need this method\n              // let mostLiquidExchange = MATIC_DexLinks(rToken.mostLiquidExchangeID)\n              // let symbolLink = \"/track/token.aspx?id=\" + rToken.mdtTokenAddr + \"&s=\" + rToken.mdtTokenSymbol + \"&ex=\" + rToken.mostLiquidExchangeID;\n              // let swapLink = Replace(Replace(mostLiquidExchange.url_swap, \"xxxTOKEN2xxx\", rToken.mdtTokenAddr), \"xxxTOKEN1xxx\", \"ETH\")\n              // let swapLink = \"https://app.slingshot.finance/trade/m/\" + rToken.mdtTokenAddr + \"/\" + tokenSymbol;\n              // let thisEx = rToken.mostLiquidExchangeID + 'quickChart_' + rToken.mdtTokenAddr\n              const priceChange =  roundNumber((rToken.Price_PctChg_24hr*100), 1);\n\n              const tokenSymbol = (rToken.mdtTokenSymbol === \"MATIC\" || rToken.mdtTokenSymbol === \"WMATIC\") ? \"USDC\" : \"MATIC\";\n              const priceChangePct24hr = rToken.Price_PctChg_24hr;\n              const priceChangeFiat24hr = rToken.current_mstbePrice;\n              const priceChangeFiat24hr4Decimal = rToken.current_mstbePrice.toFixed(4);\n              const iconAddress = `https://polygondex.com/track/i/coinicons/by_0x/polygon/${rToken.mdtTokenAddr}.png`\n              const tokenTickerSymbol = rToken.mdtTokenSymbol;\n              const volFormatedToKs = kFormatter(rToken.VolumeUSD_24hr);\n              const formatListingTimeInDaysHours = formatListingTime(rToken.DateListed);\n              const tvlCurrentFormatedToKs = kFormatter(rToken.current_TVL_USD);\n              const tvlChange24hrs = rToken.TVL_USD_24hr;\n              const tvlChangeFormatedToKs = kFormatter(tvlChange24hrs);\n\n              return <tr  key={index}>\n\n                <td className={classes.tdPriceChg}>\n                  <div className={classes.dashPriceChg}>\n                    <div className={(priceChangePct24hr > 0) ? classes.gainNum : classes.negNum}>{(priceChangePct24hr > 0) ? '+' : null}{priceChange}%</div>\n                  </div>\n                  <div className={classes.dashPrice}>{apeMode ? priceChangeFiat24hr : priceChangeFiat24hr4Decimal}</div>\n                </td>\n                <td className={classes.tdTokenData}>\n                  <div className={classes.tokenSymbol}>\n                    <img src={iconAddress}\n                      alt=\"\" className={classes.tokenIcon}\n                      onError={(e)=>{\n                        e.target.onerror = null; e.target.src=\"https://polygondex.com/track/i/coinicons/missingicon.png\"\n                      }}\n                    />\n                    {tokenTickerSymbol}\n                  </div>\n                  <div className={classes.dashVol}>\n                    <span className={classes.volLabel}>vol: </span>\n                    {volFormatedToKs}\n                  </div>\n                  {apeMode ?\n                    (<div className={classes.dashListed}>\n                      {formatListingTimeInDaysHours}\n                    </div>)\n                    :\n                    null\n                  }\n                </td>\n                <td className={classes.tdTVL24}>\n                  <div className={classes.totValLocked}>\n                    {tvlCurrentFormatedToKs}\n                  </div>\n                  <div className={(tvlChange24hrs > 0) ? classes.gainNumTVL : classes.negNumTVL}>{tvlChangeFormatedToKs}</div>\n                </td>\n                <td className={classes.tdTVLTitle}>\n                  <div className={classes.tvl}>\n                    TVL\n                  </div>\n                </td>\n\n              </tr>\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n  );\n}\nexport default TokenTable;","import React, {Fragment} from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport * as TableHeaderEnum from \"../enums/TableHeaderEnum\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    margin: '8px',\n    padding: '0 5px 5px',\n    boxShadow: '3px 3px 3px #000',\n    minWidth: '280px',\n    display: 'inline-block',\n    position: 'relative',\n  },\n\n  genTable: {\n    width: '100%',\n    tableLayout: 'fixed',\n    backgroundColor: '#1d1f22'\n  },\n  tableHeader: {\n    padding: '7px',\n    margin: '1px',\n    background: '#000',\n    borderRadius: '7px 7px 0 0',\n    fontSize: '20px',\n    lineHeight: '27px',\n    position: 'sticky',\n    top: '0',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  columnHeaders : {\n    fontSize: '11px',\n    color: '#afafaf',\n    textDecoration: 'underline',\n    padding: '5px 0 5px 0px',\n  },\n  syncIndicator: {\n    textAlign: 'center'\n  },\n  gainNumTVL: {\n    color: '#02C079',\n    fontSize: '13px',\n    fontWeight: '600'\n  },\n  negNumTVL: {\n    color: 'red',\n    fontSize: '13px',\n    fontWeight: '600'\n  },\n  tdDexData: {\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '50%'\n  },\n  dashDexTitle: {\n    color: 'white',\n    display: 'flex',\n    alignItems: 'center',\n    fontWeight: '600',\n    fontSize: '16px',\n  },\n  tokenIcon: {\n    height: '17px',\n    width: '17px',\n    margin: '3px 6px 3px 3px'\n  },\n  tdTVL24: {\n    padding: '5px 4px 5px 5px',\n    color: 'white',\n    width: '15%',\n    textAlign: 'end'\n  },\n  totValLocked: {\n    color: 'white',\n    fontSize: '13px',\n    paddingBottom: '8px'\n  },\n  tdVolume: {\n    padding: '5px 4px 5px 5px',\n    width: '5%',\n  },\n  dexSyncCol: {\n    width: '25px'\n  },\n  dexVolColHeader: {\n    color: '#f8e39b',\n    width: '30%'\n  },\n  dashDexVol24: {\n    fontSize: '22px',\n    fontWeight: '400',\n    color: '#f8e39b',\n  },\n  dexTVLCol: {\n    width: '18%'\n  }\n});\n\nconst mFormatter = (num) => {\n  return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000000).toFixed(1)) : num.toFixed(2);\n}\n\nconst DexTable = ({filteredTableData, tableHeaderData, apeMode}) => {\n  console.log(filteredTableData)\n  const classes = useStyles();\n  const [tableData] = React.useState(filteredTableData);\n\n  const renderTableTitleIcon = () => {\n    if (tableHeaderData === TableHeaderEnum.TOP_DEXs){\n      return (\n          <h2 className={classes.tableHeader}>\n            <i className=\"fas fa-exchange-alt\" style={{color:'white', marginRight:'8px', fontSize: '22px'}}/>\n            Top Polygon DEXs\n          </h2>\n      )\n    }\n  }\n\n  return (\n      <div className={apeMode ? classes.tableContainerApeMode : classes.tableContainer}>\n\n        {renderTableTitleIcon()}\n        <table className={classes.genTable}>\n          <tbody>\n          <tr>\n            <th className={`${classes.dexSyncCol} ${classes.columnHeaders}`}>sync</th>\n            <th className={` ${classes.columnHeaders}`}>dex</th>\n            <th className={`${classes.dexVolColHeader} ${classes.columnHeaders}`}>24hr $Vol <br/> $millions</th>\n            <th className={`${classes.dexTVLCol} ${classes.columnHeaders}`}>$TVL <br/> $millions</th>\n          </tr>\n          {\n            tableData.map((dex, index) => {\n\n              const iconAddress = `https://polygondex.com/track/i/coinicons/${dex.DexName}.png`\n              return <tr  key={index}>\n                <td className={classes.syncIndicator}>\n                  <i style={dex.str_syncDiff.includes('good') ? {color:'green'} : dex.str_syncDiff.includes('ok') ? {color:'yellow'} : {color:'red'}} className=\"fas fa-circle\"></i>\n                </td>\n                <td className={classes.tdDexData}>\n                  <div className={classes.dashDexTitle}>\n                    <img src={iconAddress}\n                         alt=\"\" className={classes.tokenIcon}\n                         onError={(e)=>{\n                           e.target.onerror = null; e.target.src=\"https://polygondex.com/track/i/coinicons/missingicon.png\"\n                         }}\n                    />\n                    {dex.DexName_Display}\n                  </div>\n                </td>\n                <td className={classes.tdVolume}>\n                  <div className={classes.dashDexVol24}>\n                    ${mFormatter(dex.Volume24hrs)}\n                  </div>\n                </td>\n                <td className={classes.tdTVL24}>\n                  <div className={classes.totValLocked}>\n                    ${mFormatter(dex.max_TotalLiquidityUSD)}\n                  </div>\n                  <div className={(dex.TVL24hrs > 0) ? classes.gainNumTVL : classes.negNumTVL}>\n                    {(dex.TVL24hrs > 0) ? '+' : null}\n                    {mFormatter(dex.TVL24hrs)}\n                  </div>\n                </td>\n              </tr>\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n  );\n}\nexport default DexTable;","import React, {Fragment, useEffect} from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport AnyChart from 'anychart-react';\nimport anychart from 'anychart';\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n  majorsChartBox: {\n    width: '32%',\n    display: 'block',\n    border: '1px solid #a59393',\n    background: 'black',\n    borderRadius: '10px',\n    padding: '5px',\n    margin: '5px',\n    boxShadow: '3px 3px 3px #000',\n  },\n  majorsInfoRow:{\n    background: '#141517',\n    zIndex: '1',\n    position: 'relative',\n    display: 'table',\n    width: '99%'\n  },\n  majorsIconSymbol:{\n    display: 'table-cell',\n    verticalAlign: 'top',\n    width: '250px',\n    whiteSpace: 'nowrap'\n  },\n  majorsIcon:{\n    float:'left',\n    marginRight: '2px',\n    '& img': {\n      borderRadius: '6px',\n      width: '32px',\n      margin: '5px'\n    }\n  },\n  majorsSymbol:{\n    fontSize: '30px',\n    textDecoration: 'none',\n    fontWeight: '600',\n    lineHeight: '45px',\n    display: 'block',\n    marginLeft: '4px',\n    verticalAlign: 'top',\n    color: '#8dc0ff'\n  },\n  majorsPriceAndChg:{\n    verticalAlign: 'top',\n    paddingTop: '5px',\n    display: 'table',\n    width: '206px',\n  },\n  majorsPrice: {\n    margin: '1px',\n    padding: '2px',\n    textAlign: 'right',\n    fontSize: '18px',\n    lineHeight: '33px',\n    fontWeight: '600',\n    display: 'table-cell',\n    width: '50%',\n    fontFamily: 'Open Sans',\n    color: '#e8e8e8'\n  },\n  majorsPriceChgPct_gain:{\n    margin: '1px',\n    padding: '2px',\n    textAlign: 'right',\n    fontSize: '18px',\n    lineHeight: '33px',\n    fontWeight: '600',\n    display: 'table-cell',\n    width: '50%',\n    color: '#02c076'\n  },\n  majorsPriceChgPct_loss:{\n    margin: '1px',\n    padding: '2px',\n    textAlign: 'right',\n    fontSize: '18px',\n    lineHeight: '33px',\n    fontWeight: '600',\n    display: 'table-cell',\n    width: '50%',\n    color: '#f84960;'\n  },\n});\n\nconst MainChart = (props) => {\n  const {coinID, symbol, iconURL} = props;\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState([]);\n  const iconAddress = `https://polygondex.com/${iconURL}`\n  const [PriceOPEN, setPriceOPEN] = React.useState(null)\n  const [PriceCLOSE, setPriceCLOSE] = React.useState(null)\n\n  const [PriceChng, setPriceChng] = React.useState(null)\n  const [PriceChngPct, setPriceChngPct] = React.useState(null);\n  const [classColors, setclassColors] = React.useState('gain');\n  const [pricePrefix, setpricePrefix] = React.useState('+');\n\n  useEffect(() => {\n    if (chartData.length) return;\n    getPDEXTokenData().catch(err => console.error(err));\n  }, [chartData])\n\n  const getPDEXTokenData = async () => {\n\n    const tokenData = await axios.get(`https://api.coingecko.com/api/v3/coins/${coinID}/ohlc?vs_currency=usd&days=1`);\n    if (tokenData.data?.length) {\n      console.log(tokenData.data)\n      setChartData(tokenData.data);\n      getChartColorData(tokenData.data)\n      return true;\n    }\n  }\n\n  const getChartColorData = (chartData) => {\n    setPriceOPEN(chartData[0][4])\n    setPriceCLOSE(chartData[chartData.length - 1][4])\n    const tempPriceOpen = chartData[0][4];\n    const tempPriceClose = chartData[chartData.length - 1][4];\n\n    setPriceChng(tempPriceClose-tempPriceOpen)\n    const tempPriceChng = tempPriceClose-tempPriceOpen\n    setPriceChngPct(((tempPriceChng / tempPriceOpen) * 100).toFixed(2));\n\n    if (tempPriceChng < 0) {\n      setclassColors('loss');\n      setpricePrefix('');\n    }\n    return pricePrefix\n  }\n\n  function drawChartType1(QuoteSymbol, JSONdata, containerObjID) {\n    const currentDatePlusOne = new Date();\n    currentDatePlusOne.setDate(currentDatePlusOne.getDate() +1)\n    const currentDatePlusOneNow = `${currentDatePlusOne.getFullYear()}-${currentDatePlusOne.getMonth()+1}-${currentDatePlusOne.getDate()}`\n    const threeDaysAgo = new Date()\n    threeDaysAgo.setDate(threeDaysAgo.getDate() - 3);\n    const currentDateThreeDaysAgo = `${threeDaysAgo.getFullYear()}-${threeDaysAgo.getMonth()+1}-${threeDaysAgo.getDate()}`\n    const chartStart = currentDateThreeDaysAgo;\n    const chartEnd = currentDatePlusOneNow;\n    const allBGs = '#0000000d'\n    const linesGrid = '#1415170f'\n    const linesHover = '#e8e8e8'\n    const lineClose = '#e8e8e8'\n\n    const colorUP_stroke = 'rgba(255, 255, 255, 0.7)'\n    const colorUP_fill = 'rgba(2, 192, 118, 0.7)'\n\n    const colorDOWN_stroke = 'rgba(255, 255, 255, 0.8)'\n    const colorDOWN_fill = '#f84960'\n\n\n    const dataTable = anychart.data.table();\n    dataTable.addData(JSONdata);\n\n    let chart = anychart.stock();\n    const plot = chart.plot(0);\n\n    plot.yAxis().orientation('right');\n\n    const priceIndicator = plot.priceIndicator();\n    priceIndicator.value('last-visible');\n    priceIndicator.stroke({thickness: 0.8, color : lineClose, dash : '2 2'});\n\n\n    priceIndicator.risingStroke(colorUP_fill);\n    priceIndicator.risingLabel({ background: colorUP_fill });\n    priceIndicator.fallingStroke(colorDOWN_fill);\n    priceIndicator.fallingLabel({ background: colorDOWN_fill });\n\n    //---------------------------------------------------------------------------------------------------------------------------------\n    //---------------------------------------------------------------------------------------------------------------------------------\n\n    let series = plot.splineArea(dataTable.mapAs({ 'value': 4 })).name(QuoteSymbol)\n\n    if (pricePrefix == '+') {\n      series.fill(['rgba(2, 192, 118, 0.0)',colorUP_fill],90);\n      series.stroke(colorUP_stroke);\n    }\n    else {\n      series.fill(['rgba(248, 73, 96, 0.0)',colorDOWN_fill],90);\n      series.stroke(colorDOWN_stroke);\n    }\n\n    series.pointWidth('50%');\n\n    //---------------------------------------------------------------------------------------------------------------------------------\n    //---------------------------------------------------------------------------------------------------------------------------------\n\n    plot.xGrid().enabled(true);\n    plot.xGrid().stroke({\n      color: linesGrid,\n      dash: '3 5'\n    });\n\n    plot.yGrid().enabled(true);\n    plot.yGrid().stroke({\n      color: linesGrid,\n      dash: '3 5'\n    });\n\n    plot.xMinorGrid().stroke({\n      color: linesGrid,\n      dash: '3 5'\n    });\n\n    chart.crosshair().displayMode('float');\n\n    plot.crosshair().xStroke(linesHover, 1, '10 5', 'round');\n    plot.crosshair().yStroke(linesHover, 1, '10 5', 'round');\n\n    chart.background().fill(allBGs);\n\n    // chart.container(containerObjID);\n\n    chart.selectRange(chartStart, chartEnd);\n\n    chart.padding(0, 0, 0, 0);\n    chart.margin(0, 55, 0, 5);\n\n    const rangeSelector = anychart.ui.rangeSelector();\n\n    // specify which chart range selector controls\n\n    chart.scroller().enabled(false);\n    // render the chart\n    chart.container(containerObjID);\n    chart.draw();\n    return chart;\n  }\n\n  if (chartData.length && classColors) {\n    return (\n        <div className={classes.majorsChartBox}>\n          <div className={classes.majorsInfoRow}>\n            <div className={classes.majorsIconSymbol}>\n              <div className={classes.majorsIcon}>\n                <img src={iconAddress}/>\n              </div>\n              <a className={classes.majorsSymbol} href='`/track/token.aspx?s=${symbol}&major=1`'>{symbol}</a>\n            </div>\n            <div className={classes.majorsPriceAndChg}>\n              <div className={classes.majorsPrice}>${chartData[chartData.length - 1][4].toFixed(2)}</div>\n              <div className={classes[`majorsPriceChgPct_${classColors}`]}>{pricePrefix} {PriceChngPct} %</div>\n            </div>\n          </div>\n          <AnyChart\n              height={200}\n              id={`coinChart_${symbol}`}\n              instance={drawChartType1(symbol, chartData, `coinChart_${symbol}`)}\n          />\n        </div>\n\n    );\n  }\n  return null;\n}\nexport default MainChart;","import React, {useEffect} from 'react';\nimport './App.css';\nimport NavBar from './layout/NavBar';\n\nimport { Button } from '@material-ui/core';\nimport { useMoralis } from 'react-moralis';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { XGrid } from '@material-ui/x-grid';\nimport TokenTable from \"./components/TokenTable\";\nimport * as TableHeaderEnum from \"./enums/TableHeaderEnum\";\nimport DexTable from \"./components/DexTable\";\nimport MainCharts from \"./components/MainCharts\";\nconst axios = require('axios');\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  generalGridStyle: {\n    color: 'white'\n  },\n  welcomeMsg: {\n    margin: '12px',\n    textAlign: 'center'\n  },\n  divMainDish: {\n    width: '100%'\n  },\n  homeLeftCol: {\n    width: '20%',\n    verticalAlign:'top',\n    display: 'table-cell'\n  },\n  homeRightCol: {\n    width: '80%',\n    verticalAlign:'top',\n    display: 'table-cell'\n  },\n  majorCharts: {\n    width: '100%',\n    padding: '8px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nexport default function App() {\n  const classes = useStyles();\n  const [chainData, setChainData] = React.useState([]);\n  const { authenticate, isAuthenticated, user, Moralis, logout, isInitialized } = useMoralis();\n  const [apeMode, setApeMode] = React.useState(false);\n  const [gainers24HRSortedData, setGainers24HRSortedData] = React.useState([]);\n  const [gainers10MINSortedData, setGainers10MINSortedData] = React.useState([]);\n  const [losers24HRSortedData, setLosers24HRSortedData] = React.useState([]);\n  const [tvlGainers24HRSortedData, setTVLGainers24HRSortedData] = React.useState([]);\n  const [tvlLosers24HRSortedData, setTVLLosers24HRSortedData] = React.useState([]);\n  const [mostActiveSortedData, setMostActiveSortedData] = React.useState([]);\n\n  const [mostActiveApeModeSortedData, setMostActiveApeModeSortedData] = React.useState([]);\n  const [newestListingApeModeSortedData, setNewestListingApeModeSortedData] = React.useState([]);\n  const [gainers24HRApeModeSortedData, setGainers24HRApeModeSortedData] = React.useState([]);\n\n  const [polygonDexSortedData, setPolygonDexSortedData] = React.useState([]);\n  useEffect(() => {\n    getPDEXTokenData()\n      .catch(errResp => console.error(errResp));\n    getPDEXData()\n      .catch(errResp => console.error(errResp));\n    console.log(polygonDexSortedData)\n  }, []);\n\n  useEffect(() => {\n    setLosers24HRSortedData([...gainers24HRSortedData].reverse())\n  }, [gainers24HRSortedData]);\n\n  useEffect(() => {\n    setTVLLosers24HRSortedData([...tvlGainers24HRSortedData].reverse())\n  }, [tvlGainers24HRSortedData]);\n\n  useEffect(() => {\n    if (apeMode) getApeModeData().catch(errResp => console.error(errResp));\n  }, [apeMode]);\n\n\n  const displayUserName = () => {\n    if (!isAuthenticated) return '...Please connect MetaMask with Authenticate Button';\n    return user.get('username');\n  };\n\n  const getRecords = async () => {\n    if (isAuthenticated) {\n      const query = new Moralis.Query('EthTransactions');\n      query.equalTo('from_address', user.get('ethAddress'));\n      const results = await query.find();\n      const temp = [];\n      await results.forEach((point) => {\n        const tempObj = {\n          id: point.attributes.transaction_index,\n          ...point.attributes\n        };\n        temp.push(tempObj);\n      });\n      await setChainData(temp);\n      console.log(temp);\n      await console.log(results[0].attributes);\n    } else {\n      return;\n    }\n  };\n\n  const sortGainers = (a, b, propToSortBy) => {\n    if (a[propToSortBy] > b[propToSortBy]) return -1;\n    if (a[propToSortBy] < b[propToSortBy]) return 1;\n    return 0;\n  }\n\n  const sortByListingDate = (a, b) => {\n    let trimmedA = a?.DateListed.substring(6, a.DateListed.length - 2);\n    let trimmedB = b?.DateListed.substring(6, b.DateListed.length - 2);\n    if (trimmedA > trimmedB) return -1;\n    if (trimmedA < trimmedB) return 1;\n    return 0;\n  }\n\n  const getPDEXData = async () => {\n    const pDexResp = await axios.get('https://polygondex.com/track/api/v1.aspx?apiMe=dexlist');\n    if (pDexResp.data) {\n      console.log(pDexResp.data)\n      setPolygonDexSortedData([...pDexResp.data.sort((a, b) => {\n        return sortGainers(a, b, 'Volume24hrs');\n      })]);\n    }\n  }\n\n  const getPDEXTokenData = async () => {\n    const pDexTokenResp = await axios.get('https://polygondex.com/track/api/v1.aspx?apiMe=1');\n    if (pDexTokenResp.data) {\n      const filterLowTvl = [...pDexTokenResp.data.filter(token => token.current_TVL_USD >= 25000)]\n      setGainers24HRSortedData([...filterLowTvl.sort((a, b) => {\n        return sortGainers(a, b, 'Price_PctChg_24hr');\n      })]);\n      setGainers10MINSortedData([...filterLowTvl.sort((a, b) => {\n        return sortGainers(a, b, 'Price_PctChg_10min');\n      })]);\n      setMostActiveSortedData([...filterLowTvl.sort((a, b) => {\n        return sortGainers(a, b, 'VolumeUSD_24hr');\n      })]);\n      setTVLGainers24HRSortedData([...pDexTokenResp.data.sort((a, b) => {\n        return sortGainers(a, b, 'TVL_USD_24hr');\n      })]);\n      console.log(pDexTokenResp.data)\n    }\n  }\n\n  const getApeModeData = async () => {\n    // TODO Will need to change for updating\n    if (gainers24HRApeModeSortedData.length && mostActiveApeModeSortedData.length && newestListingApeModeSortedData.length) return;\n    const apeModeData = await axios.get('https://polygondex.com/track/api/v1.aspx?apiMe=ape');\n    if (apeModeData.data) {\n\n      setGainers24HRApeModeSortedData([...apeModeData.data.sort((a, b) => {\n        return sortGainers(a, b, 'Price_PctChg_24hr');\n      })]);\n      setMostActiveApeModeSortedData([...apeModeData.data.sort((a, b) => {\n        return sortGainers(a, b, 'VolumeUSD_24hr');\n      })]);\n      setNewestListingApeModeSortedData([...apeModeData.data.sort((a, b) => {\n        return sortByListingDate(a, b);\n      })]);\n\n      console.log(apeModeData.data)\n    }\n  }\n\n  const renderGenericDexTable = (tableData, headerEnum) => {\n    if (!tableData.length) return;\n    return (\n      <DexTable\n          filteredTableData={tableData}\n          tableHeaderData={headerEnum}\n      />\n    )\n  }\n  const renderGenericTokenTable = (tableData, headerEnum) => {\n    if (!tableData.length) return;\n    return (\n      <TokenTable\n          filteredTableData={tableData}\n          tableHeaderData={headerEnum}\n          apeMode={apeMode}\n          key={headerEnum}\n      />\n    )\n  }\n\n  const apeModeCharts = [\n    renderGenericTokenTable(gainers24HRApeModeSortedData, TableHeaderEnum.GAINER_24HR),\n    renderGenericTokenTable(newestListingApeModeSortedData, TableHeaderEnum.NEWEST_LISTING),\n    renderGenericTokenTable(mostActiveApeModeSortedData, TableHeaderEnum.ACTIVE_24HR)\n  ];\n  const regularCharts = [\n    renderGenericTokenTable(gainers24HRSortedData, TableHeaderEnum.GAINER_24HR),\n    renderGenericTokenTable(losers24HRSortedData, TableHeaderEnum.LOSER_24HR),\n    renderGenericTokenTable(mostActiveSortedData, TableHeaderEnum.ACTIVE_24HR),\n    renderGenericTokenTable(gainers10MINSortedData, TableHeaderEnum.GAINER_10MIN),\n    renderGenericTokenTable(tvlGainers24HRSortedData, TableHeaderEnum.TVL_UP_24HR),\n    renderGenericTokenTable(tvlLosers24HRSortedData, TableHeaderEnum.TVL_DOWN_24HR),\n  ];\n\n\n  const columns = [\n    { title: 'block_hash', field: 'block_hash' },\n    { title: 'block_number', field: 'block_number' },\n    { title: 'block_timestamp name', field: 'block_timestamp' },\n    { title: 'confirmed name', field: 'confirmed' },\n    { title: 'createdAt', field: 'createdAt' },\n    { title: 'from_address', field: 'from_address' },\n    { title: 'gas', field: 'gas' },\n    { title: 'gas_price name', field: 'gas_price' },\n    { title: 'hash name', field: 'hash' },\n    { title: 'input', field: 'input' },\n    { title: 'nonce', field: 'nonce' },\n    // { title: 'receipt_contract_address', field: 'receipt_contract_address' },\n    { title: 'receipt_cumulative_gas_used name', field: 'receipt_cumulative_gas_used' },\n    { title: 'receipt_gas_used name', field: 'receipt_gas_used' },\n    // { title: 'receipt_root', field: 'receipt_root' },\n    { title: 'receipt_status', field: 'receipt_status' },\n    { title: 'to_address', field: 'to_address' },\n    { title: 'transaction_index', field: 'transaction_index' }\n  ];\n\n  // setTimeout(function () { loadMajorsChart(\"ethereum\", \"ETH\", \"/track/i/majors-eth.png\") }, 500);\n  // setTimeout(function () { loadMajorsChart(\"matic-network\", \"MATIC\", \"/track/i/majors-matic.png\") }, 700);\n  // setTimeout(function () { loadMajorsChart(\"quick\", \"QUICK\", \"/track/i/majors-quick.png\") }, 1000);\n\n\n  return (\n    <div className={'primaryBackground'}>\n      <NavBar tokenList={gainers24HRSortedData} setApeMode={setApeMode} apeMode={apeMode}/>\n      <Button style={{ background: 'lightgreen', width: '150px', margin: '30px' }} onClick={() => authenticate()}>\n        Authenticate\n      </Button>\n      <Button style={{ background: '#F9525F', width: '150px', margin: '30px' }} onClick={() => logout()}>\n        Logout\n      </Button>\n      <Button style={{ background: 'grey', width: '150px', margin: '30px' }} onClick={() => getRecords()}>\n        Refresh Stats\n      </Button>\n\n      <h3 className={classes.welcomeMsg}>Welcome {displayUserName()}</h3>\n      {/*<div style={{ margin: 'auto', height: 800, width: '96%', backgroundColor: '#131416', color: 'white' }}>*/}\n      {/*  <XGrid*/}\n      {/*    rows={chainData}*/}\n      {/*    columns={columns}*/}\n      {/*    className={classes.generalGridStyle}*/}\n      {/*    disableColumnFilter={true}*/}\n      {/*    disableColumnMenu={true}*/}\n      {/*  />*/}\n      {/*</div>*/}\n      <div className={classes.majorCharts}>\n\n        <MainCharts\n            coinID={\"ethereum\"}\n            symbol={\"ETH\"}\n            iconURL={\"/track/i/majors-eth.png\"}\n        />\n        <MainCharts\n            coinID={\"matic-network\"}\n            symbol={\"MATIC\"}\n            iconURL={\"/track/i/majors-matic.png\"}\n        />\n        <MainCharts\n            coinID={\"quick\"}\n            symbol={\"QUICK\"}\n            iconURL={\"/track/i/majors-quick.png\"}\n        />\n      </div>\n      <div className={classes.divMainDish}>\n        <div className={classes.homeLeftCol}>\n          {renderGenericDexTable(polygonDexSortedData, TableHeaderEnum.TOP_DEXs)}\n\n        </div>\n        <div className={classes.homeRightCol}>\n          {!apeMode ? regularCharts : apeModeCharts}\n        </div>\n\n\n      </div>\n\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from 'react-moralis';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nwindow.anychart.licenseKey('portoasis-4759bd22-16459337');\n\nReactDOM.render(\n  <MoralisProvider\n    appId=\"yXYoxCHXnLT54ylFTQUM48MmxJWCYnFIKdirLvJU\"\n    serverUrl=\"https://l0ofdtitry2q.usemoralis.com:2053/server\"\n  >\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const TableHeaderEnum = Object.freeze({\n  GAINER_24HR: 'GAINER_24HR',\n  GAINER_10MIN: 'GAINER_10MIN',\n  LOSER_24HR: 'LOSER_24HR',\n  ACTIVE_24HR: 'ACTIVE_24HR',\n  TVL_UP_24HR: 'TVL_UP_24HR',\n  TVL_DOWN_24HR: 'TVL_DOWN_24HR',\n  NEWEST_LISTING: 'NEWEST_LISTING',\n  TOP_DEXs: 'TOP_DEXs'\n});\n\nmodule.exports = TableHeaderEnum"],"sourceRoot":""}